import { PrismaClient } from "@prisma/client";
import bcrypt from "bcryptjs";

const prisma = new PrismaClient();

export const login = async (email: string, password: string) => {
  // ğŸ”¹ ZnajdÅº uÅ¼ytkownika po e-mailu
  const user = await prisma.user.findUnique({ where: { email } });

  if (!user) return null;

  // ğŸ”¹ SprawdÅº, czy konto zostaÅ‚o zweryfikowane
  if (!user.isVerified) {
    throw new Error("Konto nie zostaÅ‚o zweryfikowane.");
  }

  // ğŸ”¹ Upewnij siÄ™, Å¼e uÅ¼ytkownik ma hasÅ‚o (nie loguje siÄ™ np. przez Google)
  if (!user.password) {
    throw new Error("To konto jest poÅ‚Ä…czone z logowaniem przez Google lub Apple.");
  }

  // ğŸ”¹ PorÃ³wnaj hasÅ‚o
  const isValid = await bcrypt.compare(password, user.password);
  if (!isValid) return null;

  // âœ… ZwrÃ³Ä‡ wszystkie potrzebne pola, spÃ³jne z logikÄ… logowania Google/Apple
  return {
    id: user.id,
    email: user.email,
    userName: user.userName,
    isVerified: user.isVerified,
    isPhoneVerified: user.isPhoneVerified,
    isRegistrationComplete: user.isRegistrationComplete, // ğŸ”¥ dodane
    avatarUrl: user.avatarUrl,
    description: user.description,
  };
};
